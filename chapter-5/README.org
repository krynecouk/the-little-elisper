* 5. *Oh My Gawd*: It's Full of Stars
** ~rember*~
#+begin_src elisp
(defun rember* (a lat)
  (cond
   ((null lat) '())
   ((atom (car lat))
    (cond
     ((equal a (car lat))
      (rember* a (cdr lat)))
     (t
      (cons
       (car lat)
       (rember* a (cdr lat))))))
   (t
    (cons
     (rember* a (car lat))
     (rember* a (cdr lat))))))

(rember* "cup" '(("coffee") "cup" (("tea") "cup") ("and" ("hick")) "cup"))
; (("coffee") (("tea")) ("and" ("hick")))
#+end_src

** ~insertR*~
#+begin_src elisp
(defun insertR* (new old l)
  (cond
   ((null l) '())
   ((atom (car l))
    (cond
     ((equal old (car l))
      (cons
       old
       (cons new (cdr l))))
     (t
      (cons
       (car l)
       (insertR* new old (cdr l))))))
   (t
    (cons
     (insertR* new old (car l))
     (insertR* new old (cdr l))))))

(insertR* "roast" "chuck"
          '(("how" "much" ("wood"))
            "could"
            (("a" ("wood") "chuck"))
            ((("chuck")))
            ("if" ("a") (("wood" "chuck")))
            "could" "chuck" "wood"))

; ((how much (wood))
; could
; ((a (wood) chuck roast))
; (((chuck roast)))
; (if (a) ((wood chuck roast)))
; could chuck roast wood)
#+end_src

** ~occur*~
#+begin_src elisp
(defun occur* (a l)
    
)

(occur*
 '(("banana")
   ("split" (((("banana" "ice")))
             ("cream" ("banana"))
             "sherbet"))
   ("banana")
   ("bread")
   ("banana" "brandy")))
; 5
#+end_src
